{
 _readableState:
  ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    paused: true,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrain: 0,
    readingMore: true,
    decoder: null,
    encoding: null },
 readable: true,
 _events: [Object: null prototype] { end: [Function: responseOnEnd] },
 _eventsCount: 1,
 _maxListeners: undefined,
 socket:
  TLSSocket {
    _tlsOptions:
     { pipe: false,
       secureContext: [SecureContext],
       isServer: false,
       requestCert: true,
       rejectUnauthorized: true,
       session: undefined,
       ALPNProtocols: undefined,
       requestOCSP: undefined },
    _secureEstablished: true,
    _securePending: false,
    _newSessionPending: false,
    _controlReleased: true,
    _SNICallback: null,
    servername: 'testnet.bitmex.com',
    alpnProtocol: false,
    authorized: true,
    authorizationError: null,
    encrypted: true,
    _events:
     [Object: null prototype] {
       close: [Array],
       end: [Array],
       secure: [Function: onConnectSecure],
       free: [Function: onFree],
       agentRemove: [Function: onRemove],
       drain: [Function: ondrain],
       error: [Function: socketErrorListener],
       data: [Function: socketOnData] },
    _eventsCount: 8,
    connecting: false,
    _hadError: false,
    _handle:
     TLSWrap {
       _parent: [TCP],
       _parentWrap: undefined,
       _secureContext: [SecureContext],
       reading: true,
       onread: [Function: onStreamRead],
       onhandshakestart: [Function: noop],
       onhandshakedone: [Function: bound ],
       onocspresponse: [Function: onocspresponse],
       onerror: [Function: onerror],
       [Symbol(owner)]: [Circular] },
    _parent: null,
    _host: 'testnet.bitmex.com',
    _readableState:
     ReadableState {
       objectMode: false,
       highWaterMark: 16384,
       buffer: BufferList { head: null, tail: null, length: 0 },
       length: 0,
       pipes: null,
       pipesCount: 0,
       flowing: true,
       ended: false,
       endEmitted: false,
       reading: false,
       sync: false,
       needReadable: true,
       emittedReadable: false,
       readableListening: false,
       resumeScheduled: false,
       paused: false,
       emitClose: false,
       autoDestroy: false,
       destroyed: false,
       defaultEncoding: 'utf8',
       awaitDrain: 0,
       readingMore: false,
       decoder: null,
       encoding: null },
    readable: true,
    _maxListeners: undefined,
    _writableState:
     WritableState {
       objectMode: false,
       highWaterMark: 16384,
       finalCalled: false,
       needDrain: false,
       ending: false,
       ended: false,
       finished: false,
       destroyed: false,
       decodeStrings: false,
       defaultEncoding: 'utf8',
       length: 0,
       writing: false,
       corked: 0,
       sync: false,
       bufferProcessing: false,
       onwrite: [Function: bound onwrite],
       writecb: null,
       writelen: 0,
       bufferedRequest: null,
       lastBufferedRequest: null,
       pendingcb: 0,
       prefinished: false,
       errorEmitted: false,
       emitClose: false,
       autoDestroy: false,
       bufferedRequestCount: 0,
       corkedRequestsFree: [Object] },
    writable: true,
    allowHalfOpen: false,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: undefined,
    _server: null,
    ssl:
     TLSWrap {
       _parent: [TCP],
       _parentWrap: undefined,
       _secureContext: [SecureContext],
       reading: true,
       onread: [Function: onStreamRead],
       onhandshakestart: [Function: noop],
       onhandshakedone: [Function: bound ],
       onocspresponse: [Function: onocspresponse],
       onerror: [Function: onerror],
       [Symbol(owner)]: [Circular] },
    _requestCert: true,
    _rejectUnauthorized: true,
    parser:
     HTTPParser {
       '0': [Function: parserOnHeaders],
       '1': [Function: parserOnHeadersComplete],
       '2': [Function: parserOnBody],
       '3': [Function: parserOnMessageComplete],
       '4': null,
       _headers: [],
       _url: '',
       socket: [Circular],
       incoming: [Circular],
       outgoing: [ClientRequest],
       maxHeaderPairs: 2000,
       _consumed: false,
       onIncoming: [Function: parserOnIncomingClient],
       [Symbol(isReused)]: false },
    _httpMessage:
     ClientRequest {
       _events: [Object],
       _eventsCount: 2,
       _maxListeners: undefined,
       output: [],
       outputEncodings: [],
       outputCallbacks: [],
       outputSize: 0,
       writable: true,
       _last: true,
       chunkedEncoding: false,
       shouldKeepAlive: false,
       useChunkedEncodingByDefault: false,
       sendDate: false,
       _removedConnection: false,
       _removedContLen: false,
       _removedTE: false,
       _contentLength: 0,
       _hasBody: true,
       _trailer: '',
       finished: true,
       _headerSent: true,
       socket: [Circular],
       connection: [Circular],
       _header:
        'GET / HTTP/1.1\r\ncontent-type: application/json\r\nAccept: application/json\r\nX-Requested-With: XMLHttpRequest\r\napi-expires: 1547340437\r\napi-key: aV2fEu7cN_XvrLBj-d3fxdJC\r\napi-signature: aa85cb74617d5a7213dda31b017b4051a8e5e4583c0beafffb7b951fdaa5fe59\r\nHost: testnet.bitmex.com\r\nConnection: close\r\n\r\n',
       _onPendingData: [Function: noopPendingOutput],
       agent: [Agent],
       socketPath: undefined,
       timeout: undefined,
       method: 'GET',
       path: '/',
       _ended: false,
       res: [Circular],
       aborted: false,
       timeoutCb: null,
       upgradeOrConnect: false,
       parser: [HTTPParser],
       maxHeadersCount: null,
       [Symbol(isCorked)]: false,
       [Symbol(outHeadersKey)]: [Object] },
    [Symbol(res)]:
     TLSWrap {
       _parent: [TCP],
       _parentWrap: undefined,
       _secureContext: [SecureContext],
       reading: true,
       onread: [Function: onStreamRead],
       onhandshakestart: [Function: noop],
       onhandshakedone: [Function: bound ],
       onocspresponse: [Function: onocspresponse],
       onerror: [Function: onerror],
       [Symbol(owner)]: [Circular] },
    [Symbol(asyncId)]: 11,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(connect-options)]:
     { rejectUnauthorized: true,
       ciphers:
        'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
       checkServerIdentity: [Function: checkServerIdentity],
       minDHSize: 1024,
       encoding: null,
       _agentKey: 'testnet.bitmex.com:443::::::::::::::::::',
       port: 443,
       headers: [Object],
       method: 'GET',
       path: null,
       host: 'testnet.bitmex.com',
       _defaultAgent: [Agent],
       servername: 'testnet.bitmex.com',
       singleUse: true } },
 connection:
  TLSSocket {
    _tlsOptions:
     { pipe: false,
       secureContext: [SecureContext],
       isServer: false,
       requestCert: true,
       rejectUnauthorized: true,
       session: undefined,
       ALPNProtocols: undefined,
       requestOCSP: undefined },
    _secureEstablished: true,
    _securePending: false,
    _newSessionPending: false,
    _controlReleased: true,
    _SNICallback: null,
    servername: 'testnet.bitmex.com',
    alpnProtocol: false,
    authorized: true,
    authorizationError: null,
    encrypted: true,
    _events:
     [Object: null prototype] {
       close: [Array],
       end: [Array],
       secure: [Function: onConnectSecure],
       free: [Function: onFree],
       agentRemove: [Function: onRemove],
       drain: [Function: ondrain],
       error: [Function: socketErrorListener],
       data: [Function: socketOnData] },
    _eventsCount: 8,
    connecting: false,
    _hadError: false,
    _handle:
     TLSWrap {
       _parent: [TCP],
       _parentWrap: undefined,
       _secureContext: [SecureContext],
       reading: true,
       onread: [Function: onStreamRead],
       onhandshakestart: [Function: noop],
       onhandshakedone: [Function: bound ],
       onocspresponse: [Function: onocspresponse],
       onerror: [Function: onerror],
       [Symbol(owner)]: [Circular] },
    _parent: null,
    _host: 'testnet.bitmex.com',
    _readableState:
     ReadableState {
       objectMode: false,
       highWaterMark: 16384,
       buffer: BufferList { head: null, tail: null, length: 0 },
       length: 0,
       pipes: null,
       pipesCount: 0,
       flowing: true,
       ended: false,
       endEmitted: false,
       reading: false,
       sync: false,
       needReadable: true,
       emittedReadable: false,
       readableListening: false,
       resumeScheduled: false,
       paused: false,
       emitClose: false,
       autoDestroy: false,
       destroyed: false,
       defaultEncoding: 'utf8',
       awaitDrain: 0,
       readingMore: false,
       decoder: null,
       encoding: null },
    readable: true,
    _maxListeners: undefined,
    _writableState:
     WritableState {
       objectMode: false,
       highWaterMark: 16384,
       finalCalled: false,
       needDrain: false,
       ending: false,
       ended: false,
       finished: false,
       destroyed: false,
       decodeStrings: false,
       defaultEncoding: 'utf8',
       length: 0,
       writing: false,
       corked: 0,
       sync: false,
       bufferProcessing: false,
       onwrite: [Function: bound onwrite],
       writecb: null,
       writelen: 0,
       bufferedRequest: null,
       lastBufferedRequest: null,
       pendingcb: 0,
       prefinished: false,
       errorEmitted: false,
       emitClose: false,
       autoDestroy: false,
       bufferedRequestCount: 0,
       corkedRequestsFree: [Object] },
    writable: true,
    allowHalfOpen: false,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: undefined,
    _server: null,
    ssl:
     TLSWrap {
       _parent: [TCP],
       _parentWrap: undefined,
       _secureContext: [SecureContext],
       reading: true,
       onread: [Function: onStreamRead],
       onhandshakestart: [Function: noop],
       onhandshakedone: [Function: bound ],
       onocspresponse: [Function: onocspresponse],
       onerror: [Function: onerror],
       [Symbol(owner)]: [Circular] },
    _requestCert: true,
    _rejectUnauthorized: true,
    parser:
     HTTPParser {
       '0': [Function: parserOnHeaders],
       '1': [Function: parserOnHeadersComplete],
       '2': [Function: parserOnBody],
       '3': [Function: parserOnMessageComplete],
       '4': null,
       _headers: [],
       _url: '',
       socket: [Circular],
       incoming: [Circular],
       outgoing: [ClientRequest],
       maxHeaderPairs: 2000,
       _consumed: false,
       onIncoming: [Function: parserOnIncomingClient],
       [Symbol(isReused)]: false },
    _httpMessage:
     ClientRequest {
       _events: [Object],
       _eventsCount: 2,
       _maxListeners: undefined,
       output: [],
       outputEncodings: [],
       outputCallbacks: [],
       outputSize: 0,
       writable: true,
       _last: true,
       chunkedEncoding: false,
       shouldKeepAlive: false,
       useChunkedEncodingByDefault: false,
       sendDate: false,
       _removedConnection: false,
       _removedContLen: false,
       _removedTE: false,
       _contentLength: 0,
       _hasBody: true,
       _trailer: '',
       finished: true,
       _headerSent: true,
       socket: [Circular],
       connection: [Circular],
       _header:
        'GET / HTTP/1.1\r\ncontent-type: application/json\r\nAccept: application/json\r\nX-Requested-With: XMLHttpRequest\r\napi-expires: 1547340437\r\napi-key: aV2fEu7cN_XvrLBj-d3fxdJC\r\napi-signature: aa85cb74617d5a7213dda31b017b4051a8e5e4583c0beafffb7b951fdaa5fe59\r\nHost: testnet.bitmex.com\r\nConnection: close\r\n\r\n',
       _onPendingData: [Function: noopPendingOutput],
       agent: [Agent],
       socketPath: undefined,
       timeout: undefined,
       method: 'GET',
       path: '/',
       _ended: false,
       res: [Circular],
       aborted: false,
       timeoutCb: null,
       upgradeOrConnect: false,
       parser: [HTTPParser],
       maxHeadersCount: null,
       [Symbol(isCorked)]: false,
       [Symbol(outHeadersKey)]: [Object] },
    [Symbol(res)]:
     TLSWrap {
       _parent: [TCP],
       _parentWrap: undefined,
       _secureContext: [SecureContext],
       reading: true,
       onread: [Function: onStreamRead],
       onhandshakestart: [Function: noop],
       onhandshakedone: [Function: bound ],
       onocspresponse: [Function: onocspresponse],
       onerror: [Function: onerror],
       [Symbol(owner)]: [Circular] },
    [Symbol(asyncId)]: 11,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(connect-options)]:
     { rejectUnauthorized: true,
       ciphers:
        'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
       checkServerIdentity: [Function: checkServerIdentity],
       minDHSize: 1024,
       encoding: null,
       _agentKey: 'testnet.bitmex.com:443::::::::::::::::::',
       port: 443,
       headers: [Object],
       method: 'GET',
       path: null,
       host: 'testnet.bitmex.com',
       _defaultAgent: [Agent],
       servername: 'testnet.bitmex.com',
       singleUse: true } },
 httpVersionMajor: 1,
 httpVersionMinor: 1,
 httpVersion: '1.1',
 complete: false,
 headers:
  { date: 'Sat, 12 Jan 2019 00:47:19 GMT',
    'content-type': 'text/html; charset=utf-8',
    'content-length': '186974',
    connection: 'close',
    'x-powered-by': 'Profit',
    'content-security-policy':
     "frame-ancestors 'self' https://testnet.bitmex.com https://testnet-static.bitmex.com https://testnet-eu-west-1.bitmex.com https://testnet-sg-az-1.bitmex.com http://localhost:2001;report-uri https://sentry.testnet.services.bitmex.com/api/3/csp-report/?sentry_key=c18c1af165214b358dfd796aea7b662f;",
    'x-xss-protection': '1; mode=block',
    'x-content-type-options': 'nosniff',
    'x-frame-options': 'SAMEORIGIN',
    'referrer-policy': 'strict-origin-when-cross-origin',
    'set-cookie':
     [ 'u=s%3A942212c6-c526-4ca2-84ff-1355719dc704.kETgpzNswej3bX3W8PNYd7oB3SuePDAfZP7iXj20QbI; Max-Age=31536000; Path=/; Expires=Sun, 12 Jan 2020 00:47:19 GMT; HttpOnly; Secure; SameSite=Lax',
       'connect.sid=s%3ASJZm7ijQuVYQTs9571DIUYlKhmTWrO-z.WIINn9sg2PvJbY5%2BNdSHnaRlqgplq3cNyO6Qg9IXS74; Path=/; HttpOnly; Secure; SameSite=Lax' ],
    etag: 'W/"2da5e-vIFpsuhoSECKIxR6ji8rm8t2QdQ"',
    'strict-transport-security': 'max-age=31536000; includeSubDomains' },
 rawHeaders:
  [ 'Date',
    'Sat, 12 Jan 2019 00:47:19 GMT',
    'Content-Type',
    'text/html; charset=utf-8',
    'Content-Length',
    '186974',
    'Connection',
    'close',
    'X-Powered-By',
    'Profit',
    'Content-Security-Policy',
    "frame-ancestors 'self' https://testnet.bitmex.com https://testnet-static.bitmex.com https://testnet-eu-west-1.bitmex.com https://testnet-sg-az-1.bitmex.com http://localhost:2001;report-uri https://sentry.testnet.services.bitmex.com/api/3/csp-report/?sentry_key=c18c1af165214b358dfd796aea7b662f;",
    'X-XSS-Protection',
    '1; mode=block',
    'X-Content-Type-Options',
    'nosniff',
    'X-Frame-Options',
    'SAMEORIGIN',
    'Referrer-Policy',
    'strict-origin-when-cross-origin',
    'set-cookie',
    'u=s%3A942212c6-c526-4ca2-84ff-1355719dc704.kETgpzNswej3bX3W8PNYd7oB3SuePDAfZP7iXj20QbI; Max-Age=31536000; Path=/; Expires=Sun, 12 Jan 2020 00:47:19 GMT; HttpOnly; Secure; SameSite=Lax',
    'set-cookie',
    'connect.sid=s%3ASJZm7ijQuVYQTs9571DIUYlKhmTWrO-z.WIINn9sg2PvJbY5%2BNdSHnaRlqgplq3cNyO6Qg9IXS74; Path=/; HttpOnly; Secure; SameSite=Lax',
    'ETag',
    'W/"2da5e-vIFpsuhoSECKIxR6ji8rm8t2QdQ"',
    'Strict-Transport-Security',
    'max-age=31536000; includeSubDomains' ],
 trailers: {},
 rawTrailers: [],
 aborted: false,
 upgrade: false,
 url: '',
 method: null,
 statusCode: 200,
 statusMessage: 'OK',
 client:
  TLSSocket {
    _tlsOptions:
     { pipe: false,
       secureContext: [SecureContext],
       isServer: false,
       requestCert: true,
       rejectUnauthorized: true,
       session: undefined,
       ALPNProtocols: undefined,
       requestOCSP: undefined },
    _secureEstablished: true,
    _securePending: false,
    _newSessionPending: false,
    _controlReleased: true,
    _SNICallback: null,
    servername: 'testnet.bitmex.com',
    alpnProtocol: false,
    authorized: true,
    authorizationError: null,
    encrypted: true,
    _events:
     [Object: null prototype] {
       close: [Array],
       end: [Array],
       secure: [Function: onConnectSecure],
       free: [Function: onFree],
       agentRemove: [Function: onRemove],
       drain: [Function: ondrain],
       error: [Function: socketErrorListener],
       data: [Function: socketOnData] },
    _eventsCount: 8,
    connecting: false,
    _hadError: false,
    _handle:
     TLSWrap {
       _parent: [TCP],
       _parentWrap: undefined,
       _secureContext: [SecureContext],
       reading: true,
       onread: [Function: onStreamRead],
       onhandshakestart: [Function: noop],
       onhandshakedone: [Function: bound ],
       onocspresponse: [Function: onocspresponse],
       onerror: [Function: onerror],
       [Symbol(owner)]: [Circular] },
    _parent: null,
    _host: 'testnet.bitmex.com',
    _readableState:
     ReadableState {
       objectMode: false,
       highWaterMark: 16384,
       buffer: BufferList { head: null, tail: null, length: 0 },
       length: 0,
       pipes: null,
       pipesCount: 0,
       flowing: true,
       ended: false,
       endEmitted: false,
       reading: false,
       sync: false,
       needReadable: true,
       emittedReadable: false,
       readableListening: false,
       resumeScheduled: false,
       paused: false,
       emitClose: false,
       autoDestroy: false,
       destroyed: false,
       defaultEncoding: 'utf8',
       awaitDrain: 0,
       readingMore: false,
       decoder: null,
       encoding: null },
    readable: true,
    _maxListeners: undefined,
    _writableState:
     WritableState {
       objectMode: false,
       highWaterMark: 16384,
       finalCalled: false,
       needDrain: false,
       ending: false,
       ended: false,
       finished: false,
       destroyed: false,
       decodeStrings: false,
       defaultEncoding: 'utf8',
       length: 0,
       writing: false,
       corked: 0,
       sync: false,
       bufferProcessing: false,
       onwrite: [Function: bound onwrite],
       writecb: null,
       writelen: 0,
       bufferedRequest: null,
       lastBufferedRequest: null,
       pendingcb: 0,
       prefinished: false,
       errorEmitted: false,
       emitClose: false,
       autoDestroy: false,
       bufferedRequestCount: 0,
       corkedRequestsFree: [Object] },
    writable: true,
    allowHalfOpen: false,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: undefined,
    _server: null,
    ssl:
     TLSWrap {
       _parent: [TCP],
       _parentWrap: undefined,
       _secureContext: [SecureContext],
       reading: true,
       onread: [Function: onStreamRead],
       onhandshakestart: [Function: noop],
       onhandshakedone: [Function: bound ],
       onocspresponse: [Function: onocspresponse],
       onerror: [Function: onerror],
       [Symbol(owner)]: [Circular] },
    _requestCert: true,
    _rejectUnauthorized: true,
    parser:
     HTTPParser {
       '0': [Function: parserOnHeaders],
       '1': [Function: parserOnHeadersComplete],
       '2': [Function: parserOnBody],
       '3': [Function: parserOnMessageComplete],
       '4': null,
       _headers: [],
       _url: '',
       socket: [Circular],
       incoming: [Circular],
       outgoing: [ClientRequest],
       maxHeaderPairs: 2000,
       _consumed: false,
       onIncoming: [Function: parserOnIncomingClient],
       [Symbol(isReused)]: false },
    _httpMessage:
     ClientRequest {
       _events: [Object],
       _eventsCount: 2,
       _maxListeners: undefined,
       output: [],
       outputEncodings: [],
       outputCallbacks: [],
       outputSize: 0,
       writable: true,
       _last: true,
       chunkedEncoding: false,
       shouldKeepAlive: false,
       useChunkedEncodingByDefault: false,
       sendDate: false,
       _removedConnection: false,
       _removedContLen: false,
       _removedTE: false,
       _contentLength: 0,
       _hasBody: true,
       _trailer: '',
       finished: true,
       _headerSent: true,
       socket: [Circular],
       connection: [Circular],
       _header:
        'GET / HTTP/1.1\r\ncontent-type: application/json\r\nAccept: application/json\r\nX-Requested-With: XMLHttpRequest\r\napi-expires: 1547340437\r\napi-key: aV2fEu7cN_XvrLBj-d3fxdJC\r\napi-signature: aa85cb74617d5a7213dda31b017b4051a8e5e4583c0beafffb7b951fdaa5fe59\r\nHost: testnet.bitmex.com\r\nConnection: close\r\n\r\n',
       _onPendingData: [Function: noopPendingOutput],
       agent: [Agent],
       socketPath: undefined,
       timeout: undefined,
       method: 'GET',
       path: '/',
       _ended: false,
       res: [Circular],
       aborted: false,
       timeoutCb: null,
       upgradeOrConnect: false,
       parser: [HTTPParser],
       maxHeadersCount: null,
       [Symbol(isCorked)]: false,
       [Symbol(outHeadersKey)]: [Object] },
    [Symbol(res)]:
     TLSWrap {
       _parent: [TCP],
       _parentWrap: undefined,
       _secureContext: [SecureContext],
       reading: true,
       onread: [Function: onStreamRead],
       onhandshakestart: [Function: noop],
       onhandshakedone: [Function: bound ],
       onocspresponse: [Function: onocspresponse],
       onerror: [Function: onerror],
       [Symbol(owner)]: [Circular] },
    [Symbol(asyncId)]: 11,
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0,
    [Symbol(connect-options)]:
     { rejectUnauthorized: true,
       ciphers:
        'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!MD5:!PSK:!SRP:!CAMELLIA',
       checkServerIdentity: [Function: checkServerIdentity],
       minDHSize: 1024,
       encoding: null,
       _agentKey: 'testnet.bitmex.com:443::::::::::::::::::',
       port: 443,
       headers: [Object],
       method: 'GET',
       path: null,
       host: 'testnet.bitmex.com',
       _defaultAgent: [Agent],
       servername: 'testnet.bitmex.com',
       singleUse: true } },
 _consuming: false,
 _dumped: false,
 req:
  ClientRequest {
    _events:
     [Object: null prototype] { error: [Function], prefinish: [Function: requestOnPrefinish] },
    _eventsCount: 2,
    _maxListeners: undefined,
    output: [],
    outputEncodings: [],
    outputCallbacks: [],
    outputSize: 0,
    writable: true,
    _last: true,
    chunkedEncoding: false,
    shouldKeepAlive: false,
    useChunkedEncodingByDefault: false,
    sendDate: false,
    _removedConnection: false,
    _removedContLen: false,
    _removedTE: false,
    _contentLength: 0,
    _hasBody: true,
    _trailer: '',
    finished: true,
    _headerSent: true,
    socket:
     TLSSocket {
       _tlsOptions: [Object],
       _secureEstablished: true,
       _securePending: false,
       _newSessionPending: false,
       _controlReleased: true,
       _SNICallback: null,
       servername: 'testnet.bitmex.com',
       alpnProtocol: false,
       authorized: true,
       authorizationError: null,
       encrypted: true,
       _events: [Object],
       _eventsCount: 8,
       connecting: false,
       _hadError: false,
       _handle: [TLSWrap],
       _parent: null,
       _host: 'testnet.bitmex.com',
       _readableState: [ReadableState],
       readable: true,
       _maxListeners: undefined,
       _writableState: [WritableState],
       writable: true,
       allowHalfOpen: false,
       _sockname: null,
       _pendingData: null,
       _pendingEncoding: '',
       server: undefined,
       _server: null,
       ssl: [TLSWrap],
       _requestCert: true,
       _rejectUnauthorized: true,
       parser: [HTTPParser],
       _httpMessage: [Circular],
       [Symbol(res)]: [TLSWrap],
       [Symbol(asyncId)]: 11,
       [Symbol(lastWriteQueueSize)]: 0,
       [Symbol(timeout)]: null,
       [Symbol(kBytesRead)]: 0,
       [Symbol(kBytesWritten)]: 0,
       [Symbol(connect-options)]: [Object] },
    connection:
     TLSSocket {
       _tlsOptions: [Object],
       _secureEstablished: true,
       _securePending: false,
       _newSessionPending: false,
       _controlReleased: true,
       _SNICallback: null,
       servername: 'testnet.bitmex.com',
       alpnProtocol: false,
       authorized: true,
       authorizationError: null,
       encrypted: true,
       _events: [Object],
       _eventsCount: 8,
       connecting: false,
       _hadError: false,
       _handle: [TLSWrap],
       _parent: null,
       _host: 'testnet.bitmex.com',
       _readableState: [ReadableState],
       readable: true,
       _maxListeners: undefined,
       _writableState: [WritableState],
       writable: true,
       allowHalfOpen: false,
       _sockname: null,
       _pendingData: null,
       _pendingEncoding: '',
       server: undefined,
       _server: null,
       ssl: [TLSWrap],
       _requestCert: true,
       _rejectUnauthorized: true,
       parser: [HTTPParser],
       _httpMessage: [Circular],
       [Symbol(res)]: [TLSWrap],
       [Symbol(asyncId)]: 11,
       [Symbol(lastWriteQueueSize)]: 0,
       [Symbol(timeout)]: null,
       [Symbol(kBytesRead)]: 0,
       [Symbol(kBytesWritten)]: 0,
       [Symbol(connect-options)]: [Object] },
    _header:
     'GET / HTTP/1.1\r\ncontent-type: application/json\r\nAccept: application/json\r\nX-Requested-With: XMLHttpRequest\r\napi-expires: 1547340437\r\napi-key: aV2fEu7cN_XvrLBj-d3fxdJC\r\napi-signature: aa85cb74617d5a7213dda31b017b4051a8e5e4583c0beafffb7b951fdaa5fe59\r\nHost: testnet.bitmex.com\r\nConnection: close\r\n\r\n',
    _onPendingData: [Function: noopPendingOutput],
    agent:
     Agent {
       _events: [Object],
       _eventsCount: 1,
       _maxListeners: undefined,
       defaultPort: 443,
       protocol: 'https:',
       options: [Object],
       requests: {},
       sockets: [Object],
       freeSockets: {},
       keepAliveMsecs: 1000,
       keepAlive: false,
       maxSockets: Infinity,
       maxFreeSockets: 256,
       maxCachedSessions: 100,
       _sessionCache: [Object] },
    socketPath: undefined,
    timeout: undefined,
    method: 'GET',
    path: '/',
    _ended: false,
    res: [Circular],
    aborted: false,
    timeoutCb: null,
    upgradeOrConnect: false,
    parser:
     HTTPParser {
       '0': [Function: parserOnHeaders],
       '1': [Function: parserOnHeadersComplete],
       '2': [Function: parserOnBody],
       '3': [Function: parserOnMessageComplete],
       '4': null,
       _headers: [],
       _url: '',
       socket: [TLSSocket],
       incoming: [Circular],
       outgoing: [Circular],
       maxHeaderPairs: 2000,
       _consumed: false,
       onIncoming: [Function: parserOnIncomingClient],
       [Symbol(isReused)]: false },
    maxHeadersCount: null,
    [Symbol(isCorked)]: false,
    [Symbol(outHeadersKey)]:
     [Object: null prototype] {
       'content-type': [Array],
       accept: [Array],
       'x-requested-with': [Array],
       'api-expires': [Array],
       'api-key': [Array],
       'api-signature': [Array],
       host: [Array] } } }
